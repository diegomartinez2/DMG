# Ejemplo de Input File de LAMMPS para Green-Kubo (kappa.in)
# Argón Sólido (Lennard-Jones)

# 1. Inicialización
units           metal             # Unidades típicas para sólidos
atom_style      atomic
dimension       3
boundary        p p p             # Condiciones de contorno periódicas

# 2. Definición del sistema (Ejemplo: Argón con densidad y tamaño)
lattice         fcc 5.26          # Constante de red del Argón sólido a baja T
region          box block 0 10 0 10 0 10 # 10x10x10 celdas unitarias
create_box      1 box
create_atoms    1 box

# 3. Potencial (Lennard-Jones para Argón)
mass            1 39.948          # Masa atómica del Argón
pair_style      lj/cut 10.0
pair_coeff      1 1 0.0103231 3.405 # epsilon (eV), sigma (A)

# 4. Equilibrio (Relajación a la temperatura deseada, NPT o NVT)
# **Cambio: Añade minimización inicial para materiales complejos; aumenta pasos para estabilización más larga**
minimize       1.0e-4 1.0e-6 100 1000  # **Nuevo: Minimiza energía para relajar estructuras complejas**
velocity        all create 80.0 12345 mom yes rot no  # Inicializar velocidades a 80 K
# velocity all create 80.0 12345 mom yes rot no  # Corrida 1 semilla 12345
# velocity all create 80.0 67890 mom yes rot no  # Corrida 2
# velocity all create 80.0 45678 mom yes rot no  # Corrida 3
fix             1 all npt temp 80.0 80.0 0.1 iso 0.0 0.0 1.0 # Termostato y barostato
# fix 1 all npt temp 80.0 80.0 0.1 iso 0.0 0.0 1.0 seed 54321 # Con semilla 54321
# fix 1 all langevin 80.0 80.0 0.1 98765 # Termostato Langevin con semilla 98765
timestep        0.001
# timestep      0.0005  # **Cambio: Reduce timestep para mayor precisión en potenciales complejos**
# thermo_style custom step temp etotal press vol # Usa thermo_style para monitorear
thermo          1000
run             200000
# run           1000000 # **Cambio: Aumenta de 200000 (200 ps) a 1000000 (500 ps) o más para estabilización lenta**

unfix           1
reset_timestep  0

# 5. Cálculo del Flujo de Calor y DM de Equilibrio (NVE)
# Capturamos el volumen preciso (V) y la temperatura (T)
variable V_final equal vol
# Usamos 'print' para escribir directamente los valores en un archivo.
# V_final y T se pasan como un par clave-valor.
print "T: ${T}" append parametros.txt
print "V: ${V_final}" append parametros.txt
print "dt: ${dt}" append parametros.txt

# Se usa NVE para DM de Equilibrio para las fluctuaciones del flujo de calor
fix             2 all nve
compute         myFlux all heat/flux              # Calcula el flujo de calor instantáneo
variable        Jx equal c_myFlux[1] / vol       # Componente x del flujo (J/V)
variable        Jy equal c_myFlux[2] / vol       # Componente y del flujo (J/V)
variable        Jz equal c_myFlux[3] / vol       # Componente z del flujo (J/V)
variable        J2 equal (v_Jx*v_Jx + v_Jy*v_Jy + v_Jz*v_Jz) # |J|^2

# Función de Autocorrelación del Flujo de Calor (ACF)
variable p equal 5000
# variable p equal 10000     # Longitud total de correlación (pasos)
# $p = 5000 (steps, e.g., 5 ps with dt = 0.001 ps),
variable s equal 10
# variable        s equal 5         # Intervalo de muestreo
# $s = 10 (sample every 10 steps to reduce data size),
variable d equal 10
# variable        d equal 5         # Pasos entre correlaciones
# $d = 10 (correlate over 10-step intervals).
fix             3 all ave/correlate $p $s $d &
                c_myFlux[1] c_myFlux[2] c_myFlux[3] type auto file J0Jt_12345.dat ave running

# p: correlación total (pasos), s: intervalo de muestreo, d: pasos de DM

thermo_style    custom step temp etotal press vol v_J2
thermo          1000
timestep        0.001
# timestep      0.0005
run             1000000                             # Simulación larga para la ACF
# run             10000000          # **Cambio: Aumenta de 1000000 (1 ns) a 10000000 (5 ns) para mejor estadística en ACF compleja**
